{"version":3,"sources":["config/config-spotify.js","components/auth/Auth.jsx","style/Global-Style.js","redux/SpotifySlice.js","components/Header/menu/SideBar.jsx","components/PlayerButton/PlayButton.jsx","components/main/TopTrack.jsx","components/Header/Profile/UserHeaderInfo.jsx","components/Header/Profile/Profile.jsx","components/Header/Search/SearchBox.jsx","components/Header/Notif.jsx","components/Header/Profile/ProfileInfo.js","components/Header/Header.js","components/footer/FooterPlayer.jsx","components/footer/Footer.js","components/main/LatestRelease.jsx","components/main/PublicPlaylist.jsx","components/main/TopBanner.jsx","components/page/home/HomePage.jsx","components/main/CategoryCover.jsx","components/page/discover/Discover.jsx","components/page/podcast/Podcast.jsx","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["getTokenFromResponse","window","location","hash","substring","split","reduce","acc","cur","key","value","decodeURIComponent","accessUrl","join","Auth","Grid","container","justify","sx","backgroundColor","position","minHeight","marginTop","left","top","width","direction","alignItems","item","className","src","alt","Button","variant","color","textDecoration","margin","lg","xs","padding","borderRadius","href","useStyles","makeStyles","theme","createStyles","body","backgroundImage","props","height","overflow","overscrollBehaviorY","fontFamily","breakpoints","up","border","borderBottom","fontWeight","outline","paddingBottom","spacing","fontSize","marginRight","transition","transform","GlobalStyles","maincolor","useSelector","state","spotify","setColor","SpotifySlice","createSlice","name","initialState","userInfo","img","title","followers","token","getUserTopTrack","newRelease","playSong","searchResult","userPlaylist","allCategory","reducers","GetUserInfo","action","payload","SetBgcolor","getNewRelease","splice","getUserPlaylist","showAllCategory","actions","SideBar","playlist","dispatch","useDispatch","spotifyApi","SpotifyWebApi","useEffect","setAccessToken","access_token","getUserPlaylists","then","res","items","console","log","activeStyle","Box","CssBaseline","Drawer","flexShrink","background","md","sm","zIndex","boxSizing","ml","Toolbar","display","mt","mb","style","Typography","letterSpacing","List","subheader","ListSubheader","component","id","map","text","index","to","pathname","isActive","ListItem","button","ListItemIcon","minWidth","ListItemText","textTransform","primary","dense","Playbutton","onClickHandler","onClick","columns","field","headerName","sortable","align","headerAlign","renderCell","params","Toptrack","Title","Track","mx","autoHeight","onRowClick","e","row","musicSrc","alert","disableColumnSelector","disableSelectionOnClick","rows","ColumnUnsortedIcon","showColumnRightBorder","pageSize","rowsPerPageOptions","disableColumnMenu","UserHeaderInfo","UserName","Image","Follower","Maincolor","useColor","crossOrigin","quality","data","justifyContent","textAlign","boxShadow","Profile","UserImg","UserTitle","Userfollowers","topTrack","getMyTopTracks","limit","Fill","minutes","Math","floor","duration_ms","seconds","toFixed","songTime","cover","album","images","url","time","singer","artists","preview_url","catch","err","Divider","SearchBox","useState","anchorEl","setAnchorEl","typeOfSearch","setTypeOfSearch","querySearch","setQuerySearch","open","Boolean","handleClose","target","textContent","search","albums","playlists","tracks","episodes","length","newTrack","song","owner","display_name","Paper","p","bgcolor","mr","IconButton","InputBase","onChange","flex","placeholder","inputProps","m","orientation","undefined","event","currentTarget","Menu","onClose","MenuListProps","MenuItem","Notification","Alert","setAlert","Badge","elevation","Snackbar","autoHideDuration","setTimeout","message","ProfileInfo","Userimg","getMe","type","total","Stack","Avatar","Header","Notif","options","defaultPlayIndex","bounds","quietUpdate","clearPriorAudioLists","autoPlayInitLoadPlayList","preload","glassBg","remember","remove","defaultPosition","right","bottom","defaultPlayMode","mode","once","autoPlay","toggleMode","showMiniModeCover","showMiniProcessBar","drag","seeked","showMediaSession","showProgressLoadBar","showPlay","showReload","showDownload","showPlayMode","showThemeSwitch","showLyric","showDestroy","extendsContent","defaultVolume","playModeShowTime","loadAudioErrorPlayNext","autoHiddenCover","spaceBar","responsive","mobileMediaQuery","volumeFade","fadeIn","fadeOut","restartCurrentOnPrev","sortableOptions","getContainer","document","onBeforeDestroy","currentPlayId","audioLists","audioInfo","Promise","resolve","reject","confirm","Footerplayer","Footer","LatsetRelease","getNewReleases","slidesPerView","spaceBetween","centeredSlides","pagination","clickable","flexGrow","backgroundSize","opacity","cursor","borderBottomLeftRadius","borderBottomRightRadius","backgroundPosition","filter","lineHeight","Img","styled","Publicplaylist","Albums","getAlbums","track","maxWidth","i","AvatarGroup","max","Topbanner","Homepage","pl","CategoryCover","getCategories","categories","rowSpacing","columnSpacing","rel","icons","Discover","Podcast","App","overflowY","overflowX","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8b411fee.chunk.js","sourcesContent":["export const AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\";\r\nconst CLIENT_ID = \"8fd5520eb42045058d625433f33d4221\";\r\nconst REDIRECT_UIL = \"http://localhost:3000/profile\";\r\n\r\nconst scopes = [\r\n  \"streaming\",\r\n  \"app-remote-control\", \r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-modify-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-read-email\",\r\n  \"user-read-private\",\r\n  \"user-library-modify\",\r\n  \"user-library-read\",\r\n];\r\n\r\nexport const getTokenFromResponse = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")   \r\n    .reduce((acc, cur) => {\r\n      const [key, value] = cur.split(\"=\");\r\n      acc[key] = decodeURIComponent(value);\r\n      return acc;\r\n    }, {});\r\n};\r\n\r\nexport const accessUrl = `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_UIL}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n\r\n// accessUrl = \"https://accounts.spotify.com/authorize?client_id=8fd5520eb42045058d625433f33d4221&response_type=code&redirect_uri=http://localhost:3000&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state\"\r\n","import Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { accessUrl } from \"../../config/config-spotify\";\r\n\r\nconst Auth = () => {\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      sx={{\r\n        backgroundColor: \"#000\",\r\n        position: \"absolute\",\r\n        minHeight: \"100%\",\r\n        marginTop: \"-0\",\r\n        left: \"-0\",\r\n        top: \"-0\",\r\n        width: \"100%\",\r\n      }}\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid item>\r\n        <img\r\n          className=\"authimg\"\r\n          src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n          alt=\"spotify logo\"\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          sx={{\r\n            textDecoration: \"none\",\r\n            margin: { lg: \"0 20rem\", xs: \"0\" },\r\n            color: \"#ffff\",\r\n            backgroundColor: \"#1db954\",\r\n            padding: { lg: \"13px 61px\", xs: \"10px 20px\" },\r\n            borderRadius: \"99px\",\r\n          }}\r\n          href={accessUrl}\r\n        >\r\n          Login To Spotify\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { createStyles, makeStyles } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    '@global': {\r\n      body: {\r\n        backgroundImage: (props) =>\r\n          `linear-gradient(183deg, #303347 , ${props.color}, #303347)`,\r\n        height: (props) => props.height,\r\n        overflow: 'hidden',\r\n        overscrollBehaviorY: 'none',\r\n      },\r\n      '*': {\r\n        fontFamily: 'Nunito !important',\r\n        margin: 0,\r\n        padding: 0,\r\n      },\r\n      '.authimg': {\r\n        [theme.breakpoints.up('xs')]: {\r\n          width: '100%',\r\n        },\r\n      },\r\n      '.MuiBadge-badge': {\r\n        width: '5px',\r\n        borderRadius: ' 50%',\r\n        margin: '2px 4px',\r\n        backgroundColor: '#18d45e !important',\r\n      },\r\n      '.MuiDataGrid-root': {\r\n        border: 'none !important',\r\n        height: '100%',\r\n      },\r\n      '.MuiDataGrid-cell': {\r\n        borderBottom: 'none !important',\r\n        color: '#fff !important',\r\n        fontWeight: 100,\r\n        '&&:focus': {\r\n          outline: 'none !important',\r\n        },\r\n        '&&:focus-within': {\r\n          outline: 'none !important',\r\n        },\r\n      },\r\n      '.MuiDataGrid-row': {\r\n        margin: '14px 0px',\r\n      },\r\n      '.MuiDataGrid-virtualScroller': {\r\n        paddingBottom: '8rem',\r\n\r\n        padding: theme.spacing(1),\r\n        [theme.breakpoints.up('md')]: {\r\n          backgroundColor: 'red',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n          overflow: 'scroll',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n          overflow: 'unset !important',\r\n        },\r\n      },\r\n      '.MuiDataGrid-virtualScrollerContent': {\r\n        height: '55vh !important',\r\n      },\r\n      '.MuiDataGrid-columnHeaderTitle': {\r\n        fontSize: '15px',\r\n        fontWeight: '600 !important',\r\n        color: '#ababab',\r\n      },\r\n      '.MuiTablePagination-root': {\r\n        marginTop: '-21rem !important',\r\n        color: '#fff !important',\r\n        [theme.breakpoints.up('md')]: {\r\n          marginTop: '-64rem !important',\r\n        },\r\n      },\r\n\r\n      '.swiper-slide': {\r\n        marginRight: '4rem !important',\r\n      },\r\n      '.mySwiper1': {\r\n        marginRight: '5rem !important',\r\n      },\r\n      '.MuiAvatarGroup-root .MuiAvatar-root': {\r\n        width: '26px !important',\r\n        height: '27px !important',\r\n        fontSize: '10px',\r\n        border: 'none !important',\r\n      },\r\n      '.category-cover': {\r\n        borderRadius: '4px',\r\n        transition: 'all 0.3s ease-in-out',\r\n        '&:hover': {\r\n          transform: 'scale(1.1)',\r\n          transition: 'all 0.3s ease-in-out',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: '100%',\r\n        },\r\n      },\r\n      '*::-webkit-scrollbar': {\r\n        width: '7px',\r\n      },\r\n      '*::-webkit-scrollbar-track': {\r\n        '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n      },\r\n      '*::-webkit-scrollbar-thumb': {\r\n        borderRadius: '1px',\r\n        backgroundColor: 'rgba(0,0,0,.1)',\r\n        outline: '1px solid slategrey',\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst GlobalStyles = () => {\r\n  const maincolor = useSelector((state) => state.spotify.setColor);\r\n  const props = {\r\n    height: '100vh',\r\n    color: maincolor || '#4C4853',\r\n  };\r\n  useStyles(props);\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  userInfo: {\r\n    name: null,\r\n    img: null,\r\n    title: null,\r\n    followers: null,\r\n  },\r\n  token: null,\r\n  setColor: null,\r\n  getUserTopTrack: [],\r\n  newRelease: [],\r\n  playSong: [],\r\n  searchResult: [],\r\n  userPlaylist: [],\r\n  allCategory: [],\r\n};\r\n\r\nexport const SpotifySlice = createSlice({\r\n  name: \"spotify\",\r\n  initialState,\r\n  reducers: {\r\n    GetUserInfo: (state, action) => {\r\n      state.userInfo = action.payload;\r\n    },\r\n    SetBgcolor: (state, action) => {\r\n      state.setColor = action.payload;\r\n    },\r\n    getUserTopTrack: (state, action) => {\r\n      state.getUserTopTrack = action.payload;\r\n    },\r\n    getNewRelease: (state, action) => {\r\n      state.newRelease = action.payload;\r\n    },\r\n    playSong: (state, action) => {\r\n      state.playSong.splice(0, 0, action.payload);\r\n    },\r\n    searchResult: (state, action) => {\r\n      state.searchResult = action.payload;\r\n    },\r\n    getUserPlaylist: (state, action) => {\r\n      state.userPlaylist = action.payload;\r\n    },\r\n    showAllCategory: (state, action) => {\r\n      state.allCategory = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  GetUserInfo,\r\n  SetBgcolor,\r\n  getUserTopTrack,\r\n  playSong,\r\n  getNewRelease,\r\n  searchResult,\r\n  getUserPlaylist,\r\n  showAllCategory\r\n} = SpotifySlice.actions;\r\n\r\nexport default SpotifySlice.reducer;\r\n","import { useEffect } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { getTokenFromResponse } from '../../../config/config-spotify';\r\nimport { getUserPlaylist } from '../../../redux/SpotifySlice';\r\nimport {\r\n  BiHomeAlt,\r\n  BiSearchAlt,\r\n  BiPodcast,\r\n  BiHeart,\r\n  BiMusic,\r\n} from 'react-icons/bi';\r\n\r\nconst drawerWidth = 273;\r\nconst drawerWidthMd = 243;\r\nconst drawerWidthSm = 200;\r\nconst drawerWidthXs = 150;\r\n\r\nconst SideBar = () => {\r\n  const playlist = useSelector((state) => state.spotify.userPlaylist);\r\n  const dispatch = useDispatch();\r\n  const spotifyApi = new SpotifyWebApi();\r\n  useEffect(() => {\r\n    spotifyApi.setAccessToken(getTokenFromResponse().access_token);\r\n    //Get Playlist\r\n    spotifyApi.getUserPlaylists('cdasgbwskid81gi3g3x15z14v').then((res) => {\r\n      dispatch(getUserPlaylist(res.items));\r\n      console.log(res.items);\r\n    });\r\n  }, [dispatch]);\r\n\r\n  let activeStyle = {\r\n    textDecoration: 'none',\r\n    color: '#25BF68',\r\n  };\r\n  return (\r\n    <Box>\r\n      <CssBaseline />\r\n      <Drawer\r\n        variant='permanent'\r\n        sx={{\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n          [`& .MuiDrawer-paper`]: {\r\n            background: '#1B1A20 !important',\r\n            border: 'none',\r\n            width: {\r\n              lg: drawerWidth,\r\n              md: drawerWidthMd,\r\n              sm: drawerWidthSm,\r\n              xs: drawerWidthXs,\r\n            },\r\n            zIndex: '0',\r\n            boxSizing: 'border-box',\r\n          },\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            ml: 4,\r\n          }}\r\n        >\r\n          <Toolbar sx={{ display: 'flex', alignItems: 'center', mt: 3, mb: 2 }}>\r\n            <img\r\n              src='https://upload.wikimedia.org/wikipedia/commons/thumb/1/19/Spotify_logo_without_text.svg/1024px-Spotify_logo_without_text.svg.png'\r\n              alt=''\r\n              style={{\r\n                width: '26px',\r\n                margin: '19px -10px',\r\n              }}\r\n            />\r\n            <Typography\r\n              sx={{\r\n                color: '#25BF68',\r\n                ml: 3,\r\n                fontSize: 18,\r\n                fontWeight: '400',\r\n                letterSpacing: '3px',\r\n              }}\r\n            >\r\n              SPOTIFY\r\n            </Typography>\r\n          </Toolbar>\r\n          <Box sx={{ overflow: 'auto', color: '#818285' }}>\r\n            <List\r\n              subheader={\r\n                <ListSubheader\r\n                  component='div'\r\n                  id='nested-list-subheader'\r\n                  sx={{\r\n                    background: 'transparent',\r\n                    color: '#F3F3F3',\r\n                    letterSpacing: '1px',\r\n                    fontWeight: '400',\r\n                    fontSize: { lg: 16, md: 12 },\r\n                  }}\r\n                >\r\n                  BROWSE MUSIC\r\n                </ListSubheader>\r\n              }\r\n            >\r\n              {['home', 'discover', 'podcast'].map((text, index) => (\r\n                <NavLink\r\n                  key={text}\r\n                  to={{ pathname: text, hash: window.location.hash }}\r\n                  style={({ isActive }) =>\r\n                    isActive ? activeStyle : { textDecoration: 'none' }\r\n                  }\r\n                >\r\n                  <ListItem button>\r\n                    <ListItemIcon\r\n                      sx={{\r\n                        minWidth: 37,\r\n                        fontSize: { lg: 16, md: 12 },\r\n                        color: '#ababab',\r\n                      }}\r\n                    >\r\n                      {index % 4 === 0 ? (\r\n                        <BiHomeAlt />\r\n                      ) : index % 4 === 1 ? (\r\n                        <BiSearchAlt />\r\n                      ) : index % 4 === 2 ? (\r\n                        <BiPodcast />\r\n                      ) : null}\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      sx={{\r\n                        color: '#ababab',\r\n                        textTransform: 'capitalize',\r\n                        [`& span`]: {\r\n                          fontSize: { lg: 16, md: 12 },\r\n                          fontWeight: '300',\r\n                        },\r\n                      }}\r\n                      primary={text}\r\n                    />\r\n                  </ListItem>\r\n                </NavLink>\r\n              ))}\r\n            </List>\r\n            <List\r\n              subheader={\r\n                <ListSubheader\r\n                  component='div'\r\n                  id='nested-list-subheader1'\r\n                  sx={{\r\n                    background: 'transparent',\r\n                    color: '#F3F3F3',\r\n                    letterSpacing: '1px',\r\n                    fontWeight: '400',\r\n                    fontSize: { lg: 16, md: 12 },\r\n                  }}\r\n                >\r\n                  YOUR MUSIC\r\n                </ListSubheader>\r\n              }\r\n            >\r\n              {['Favourites', 'Playlist'].map((text, index) => (\r\n                <ListItem button key={text}>\r\n                  <ListItemIcon\r\n                    sx={{\r\n                      minWidth: 37,\r\n                      fontSize: { lg: 16, md: 12 },\r\n                      color: '#ababab',\r\n                    }}\r\n                  >\r\n                    {index % 4 === 0 ? (\r\n                      <BiHeart />\r\n                    ) : index % 4 === 1 ? (\r\n                      <BiMusic />\r\n                    ) : null}\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            <List\r\n              subheader={\r\n                <ListSubheader\r\n                  component='div'\r\n                  id='nested-list-subheader'\r\n                  sx={{\r\n                    background: 'transparent',\r\n                    color: '#F3F3F3',\r\n                    letterSpacing: '1px',\r\n                    fontWeight: '400',\r\n                    fontSize: { lg: 16, md: 12 },\r\n                  }}\r\n                >\r\n                  YOUR PLAYLIST\r\n                </ListSubheader>\r\n              }\r\n            >\r\n              {playlist.map((text, index) => (\r\n                <ListItem dense button key={text.id}>\r\n                  <ListItemText\r\n                    sx={{\r\n                      color: '#ababab',\r\n                      [`& span`]: {\r\n                        fontSize: 14,\r\n                        fontWeight: '700',\r\n                      },\r\n                    }}\r\n                    primary={text.name}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Box>\r\n      </Drawer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import { Button } from \"@mui/material\";\r\nimport { BiRightArrow } from \"react-icons/bi\";\r\n\r\nconst Playbutton = ({ onClickHandler }) => {\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={onClickHandler}\r\n        sx={{\r\n          background: \"linear-gradient( 110deg, #22C35C, #2FE18E)\",\r\n          minWidth: \"41px\",\r\n          fontSize: \"19px\",\r\n          height: \"41px\",\r\n          borderRadius: \"50%\",\r\n        }}\r\n      >\r\n        <BiRightArrow style={{ color: \"#fff\" }} />\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Playbutton;\r\n","import { DataGrid } from '@mui/x-data-grid';\r\nimport Box from '@mui/material/Box';\r\nimport { Typography } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { playSong } from '../../redux/SpotifySlice';\r\nimport Playbutton from '../PlayerButton/PlayButton';\r\n\r\nconst columns = [\r\n  {\r\n    field: 'cover',\r\n    headerName: 'Cover',\r\n    width: 80,\r\n    sortable: false,\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n    renderCell: (params) => <img src={params.value} alt=\"CoverSongs\" />,\r\n  },\r\n\r\n  {\r\n    field: 'name',\r\n    headerName: 'Song',\r\n    width: 250,\r\n    sortable: false,\r\n    headerAlign: 'center',\r\n  },\r\n  {\r\n    field: 'album',\r\n    headerName: 'Album',\r\n    width: 350,\r\n    sortable: false,\r\n    headerAlign: 'center',\r\n  },\r\n  {\r\n    field: 'time',\r\n    headerName: 'Time',\r\n    width: 105,\r\n    sortable: false,\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n  },\r\n  {\r\n    field: 'singer',\r\n    headerName: 'Artist',\r\n    sortable: false,\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n    width: 190,\r\n  },\r\n  {\r\n    field: 'play',\r\n    headerName: '',\r\n    sortable: false,\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n    width: 80,\r\n    renderCell: () => <Playbutton />,\r\n  },\r\n];\r\n\r\nconst Toptrack = ({ Title, Track }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          width: { lg: '100%', md: '97%', sm: '97%' },\r\n          mx: 'auto',\r\n          mt: 6,\r\n          ml: { lg: 5, md: '104px', sm: '72px' },\r\n        }}\r\n      >\r\n        <Typography\r\n          sx={{\r\n            mb: 3,\r\n            fontSize: 25,\r\n            fontWeight: 300,\r\n            color: '#18d860',\r\n          }}\r\n        >\r\n          {Title}\r\n        </Typography>\r\n        <DataGrid\r\n          autoHeight\r\n          onRowClick={(e) => {\r\n            if (e.row.musicSrc === null) {\r\n              alert('This song cannot be played');\r\n            } else {\r\n              dispatch(playSong(e.row));\r\n            }\r\n          }}\r\n          disableColumnSelector\r\n          disableSelectionOnClick\r\n          rows={Track}\r\n          ColumnUnsortedIcon={false}\r\n          columns={columns}\r\n          showColumnRightBorder={false}\r\n          pageSize={5}\r\n          rowsPerPageOptions={[5]}\r\n          disableColumnMenu\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Toptrack;\r\n","import { useColor } from \"color-thief-react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { SetBgcolor } from \"../../../redux/SpotifySlice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst UserHeaderInfo = ({ Title, UserName, Image, Follower }) => {\r\n  const dispatch = useDispatch();\r\n  const color = useSelector((state) => state.spotify.setColor);\r\n  const { data } = useColor(Image, \"hex\", {\r\n    crossOrigin: \"anonymous\",\r\n    quality: 10,\r\n  });\r\n  const Maincolor = data;\r\n  useEffect(() => {\r\n    dispatch(SetBgcolor(Maincolor));\r\n  }, [Maincolor, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        item\r\n        xs\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        sx={{\r\n          mt: 4,\r\n          ml: 4,\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={9}\r\n          sm={12}\r\n          sx={{ textAlign: \"center\", ml: { lg: 3, md: 21, sm: 11 } }}\r\n        >\r\n          <img\r\n            style={{\r\n              boxShadow: `${color} 2px 6px 20px 0px`,\r\n              width: { lg: \"40%\", sm: \"60%\" },\r\n              borderRadius: \"3px\",\r\n            }}\r\n            src={Image}\r\n            alt=\"ProfileImg\"\r\n          />\r\n          <Typography\r\n            sx={{\r\n              mt: 2,\r\n              fontSize: { lg: 50, sm: 32 },\r\n              fontWeight: \"600\",\r\n              color: \"#fff\",\r\n            }}\r\n          >\r\n            {UserName}\r\n          </Typography>\r\n          <Typography\r\n            sx={{\r\n              fontSize: 19,\r\n              fontWeight: \"300\",\r\n              color: \"#fff\",\r\n              letterSpacing: 2,\r\n            }}\r\n          >\r\n            Type : {Title}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={3}\r\n          sm={12}\r\n          sx={{ textAlign: \"center\", ml: { lg: 3, md: 21, sm: 11 }, mt: 2 }}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              fontSize: 19,\r\n              fontWeight: \"300\",\r\n              color: \"#fff\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            Total Follower : {Follower}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserHeaderInfo;\r\n","import { Divider } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\nimport { getUserTopTrack } from \"../../../redux/SpotifySlice\";\r\nimport Toptrack from \"../../main/TopTrack\";\r\nimport UserHeaderInfo from \"./UserHeaderInfo\";\r\n\r\nconst Profile = () => {\r\n  const UserName = useSelector((state) => state.spotify.userInfo.name);\r\n  const UserImg = useSelector((state) => state.spotify.userInfo.img);\r\n  const UserTitle = useSelector((state) => state.spotify.userInfo.title);\r\n  const Userfollowers = useSelector(\r\n    (state) => state.spotify.userInfo.followers\r\n  );\r\n  const dispatch = useDispatch();\r\n  const topTrack = useSelector((state) => state.spotify.getUserTopTrack);\r\n  const spotifyApi = new SpotifyWebApi();\r\n  useEffect(() => {\r\n    spotifyApi\r\n      .getMyTopTracks({ limit: 20 })\r\n      .then((res) => {\r\n        const Fill = res.items.map((item) => {\r\n          let minutes = Math.floor(item.duration_ms / 60000);\r\n          let seconds = ((item.duration_ms % 60000) / 1000).toFixed(0);\r\n          let songTime = minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n          return {\r\n            cover: item.album.images[2].url,\r\n            name: item.name,\r\n            album: item.album.name,\r\n            time: songTime,\r\n            id: item.id,\r\n            singer: item.artists[0].name,\r\n            musicSrc: item.preview_url,\r\n          };\r\n        });\r\n        dispatch(getUserTopTrack(Fill));\r\n      })\r\n      .catch((err) =>\r\n        err ? alert(\"something went wrong. please logged in\") : null\r\n      );\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          width: \"86%\",\r\n        }}\r\n      >\r\n        <UserHeaderInfo\r\n          UserName={UserName}\r\n          Title={UserTitle}\r\n          Image={UserImg}\r\n          Follower={Userfollowers}\r\n        />\r\n        <Box sx={{ mb: 9 }}>\r\n          <Divider sx={{ mt: 4, ml: 22 }} />\r\n          <Toptrack Title=\"Top Tracks\" Track={topTrack} />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import Paper from \"@mui/material/Paper\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport { VscClose } from \"react-icons/vsc\";\r\nimport { GoSettings } from \"react-icons/go\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\nimport { searchResult } from \"../../../redux/SpotifySlice\";\r\nimport { getTokenFromResponse } from \"../../../config/config-spotify\";\r\n\r\nconst SearchBox = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [typeOfSearch, setTypeOfSearch] = useState(\"track\");\r\n  const [querySearch, setQuerySearch] = useState(\"\");\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = (e) => {\r\n    setAnchorEl(null);\r\n    setTypeOfSearch(e.target.textContent);\r\n  };\r\n  const dispatch = useDispatch();\r\n  const spotifyApi = new SpotifyWebApi();\r\n\r\n  const searchHandler = (e) => {\r\n    if (e.target.value === \"\") {\r\n      dispatch(searchResult([]));\r\n    }\r\n    setQuerySearch(e.target.value);\r\n  };\r\n\r\n  const setEmptyInput = () => {\r\n    dispatch(searchResult([]));\r\n    setQuerySearch(\"\");\r\n  };\r\n  useEffect(() => {\r\n    //get Access Token\r\n    spotifyApi.setAccessToken(getTokenFromResponse().access_token);\r\n    //Search Song\r\n    spotifyApi\r\n      .search(querySearch, [typeOfSearch])\r\n      .then((res) => {\r\n        const checkSearchType =\r\n          res.artists ||\r\n          res.albums ||\r\n          res.playlists ||\r\n          res.tracks ||\r\n          res.episodes;\r\n        const search = checkSearchType.items;\r\n        if (search.length === 0) {\r\n          alert(\"nothing found\");\r\n        }\r\n        const newTrack = search.map((song) => {\r\n          let minutes = Math.floor(song.duration_ms / 60000);\r\n          let seconds = ((song.duration_ms % 60000) / 1000).toFixed(0);\r\n          let songTime = minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n          console.log(song);\r\n          return {\r\n            cover:\r\n              typeOfSearch === \"track\"\r\n                ? song.album.images.length === 0\r\n                  ? null\r\n                  : song.album.images[2].url\r\n                : song.images.length === 0\r\n                ? null\r\n                : song.images[2].url,\r\n            name: song.name,\r\n            album: song.name,\r\n            time:\r\n              typeOfSearch === \"artist\" || typeOfSearch === \"playlist\"\r\n                ? null\r\n                : songTime,\r\n            id: typeOfSearch === \"track\" ? song.album.id : song.id,\r\n            singer:\r\n              typeOfSearch === \"artist\"\r\n                ? null\r\n                : typeOfSearch === \"playlist\"\r\n                ? song.owner.display_name\r\n                : typeOfSearch === \"episode\"\r\n                ? song.name\r\n                : song.artists[0].name,\r\n            musicSrc: typeOfSearch !== \"artist\" ? song.preview_url : null,\r\n          };\r\n        });\r\n        dispatch(searchResult(newTrack));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [querySearch, typeOfSearch]);\r\n\r\n  return (\r\n    <Paper\r\n      component=\"form\"\r\n      sx={{\r\n        p: \"2px 4px\",\r\n        bgcolor: \"#1B1A20\",\r\n        ml: { lg: 6, md: 11, sm: 8 },\r\n        mr: 0,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        width: { lg: \"80%\", sm: \"72%\" },\r\n        height: 55,\r\n        borderRadius: \"6px\",\r\n      }}\r\n    >\r\n      {!querySearch ? (\r\n        <IconButton sx={{ p: \"10px\", color: \"#ababab\" }} aria-label=\"menu\">\r\n          <BiSearch />\r\n        </IconButton>\r\n      ) : (\r\n        <IconButton\r\n          sx={{ p: \"10px\", color: \"#ababab\" }}\r\n          aria-label=\"menu\"\r\n          onClick={setEmptyInput}\r\n        >\r\n          <VscClose />\r\n        </IconButton>\r\n      )}\r\n\r\n      <InputBase\r\n        value={querySearch}\r\n        onChange={searchHandler}\r\n        sx={{\r\n          ml: 1,\r\n          flex: 1,\r\n          p: \"3px 13px\",\r\n          color: \"#fff\",\r\n          fontSize: \"14px\",\r\n          fontWeight: \"200\",\r\n          letterSpacing: \"0.8px\",\r\n        }}\r\n        placeholder=\"Artist, Podcast or Songs...\"\r\n        inputProps={{ \"aria-label\": \"Artist, Podcast or Songs...\" }}\r\n      />\r\n\r\n      <Divider\r\n        sx={{ height: 55, m: 0.5, bgcolor: \"#38394b\" }}\r\n        orientation=\"vertical\"\r\n      />\r\n      <IconButton\r\n        sx={{ p: \"9px\", color: \"#ababab\", fontSize: 18 }}\r\n        aria-label=\"menu\"\r\n        aria-expanded={open ? \"true\" : undefined}\r\n        onClick={handleClick}\r\n      >\r\n        <GoSettings />\r\n        <Typography sx={{ fontSize: 13, p: \"0 7px\" }}>Filter</Typography>\r\n      </IconButton>\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          \"aria-labelledby\": \"basic-button\",\r\n        }}\r\n      >\r\n        <MenuItem onClick={handleClose}>track</MenuItem>\r\n        <MenuItem onClick={handleClose}>album</MenuItem>\r\n        <MenuItem onClick={handleClose}>artist</MenuItem>\r\n        <MenuItem onClick={handleClose}>playlist</MenuItem>\r\n        <MenuItem onClick={handleClose}>episode</MenuItem>\r\n      </Menu>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import Box from \"@mui/material/Box\";\r\nimport { BiMessageSquareDetail, BiBell } from \"react-icons/bi\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport { useState } from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Divider } from \"@mui/material\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Badge from \"@mui/material/Badge\";\r\n\r\nconst Notification = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [Alert, setAlert] = useState(false);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const AlertHandler = () => {\r\n    setAlert(true);\r\n  };\r\n\r\n  const AlertHandlerClose = () => {\r\n    setTimeout(() => {\r\n      setAlert(false);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{\r\n      mr: {sm: 2}\r\n    }}>\r\n      <Box\r\n        sx={{\r\n          \"& > :not(style)\": {\r\n            m: {lg: 1, sm: 0},\r\n            color: \"#ababab !important\",\r\n            fontSize: 22,\r\n          },\r\n        }}\r\n      >\r\n        <IconButton\r\n          aria-expanded={open ? \"true\" : undefined}\r\n          onClick={handleClick}\r\n        >\r\n          <Badge color=\"secondary\" variant=\"dot\">\r\n            <BiMessageSquareDetail />\r\n          </Badge>\r\n        </IconButton>\r\n\r\n        <IconButton onClick={AlertHandler}>\r\n          <BiBell />\r\n        </IconButton>\r\n      </Box>\r\n      <Menu\r\n        sx={{\r\n          width: {lg: \"62%\", sm: '70%'},\r\n          ml: {lg: 44, md: 29, sm: 14},\r\n          mt: 1,\r\n        }}\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          \"aria-labelledby\": \"basic-button\",\r\n        }}\r\n      >\r\n        <Paper\r\n          elevation={0}\r\n          sx={{\r\n            width: \"100%\",\r\n            padding: \" 2px 23px\",\r\n          }}\r\n        >\r\n          <Typography sx={{ fontSize: 21, fontWeight: \"800\", mb: 1 }}>\r\n            Music without limits\r\n          </Typography>\r\n          <Divider />\r\n          <Typography sx={{ fontSize: 16, fontWeight: \"300\", mt: 1 }}>\r\n            Premium lets you play any song, anytime. You can even listen when\r\n            you’re offline. No restrictions. Ad-free music listening.\r\n          </Typography>\r\n        </Paper>\r\n      </Menu>\r\n      <Snackbar\r\n        open={Alert}\r\n        autoHideDuration={1000}\r\n        onClose={AlertHandlerClose}\r\n        message=\"There is currently no message for you\"\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import { useEffect } from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTokenFromResponse } from \"../../../config/config-spotify\";\r\nimport { GetUserInfo } from \"../../../redux/SpotifySlice\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\nconst ProfileInfo = () => {\r\n  const UserName = useSelector((state) => state.spotify.userInfo.name);\r\n  const Userimg = useSelector((state) => state.spotify.userInfo.img);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    spotifyApi.setAccessToken(getTokenFromResponse().access_token);\r\n    spotifyApi.getMe().then((res) => {\r\n      dispatch(\r\n        GetUserInfo({\r\n          name: res.display_name,\r\n          img: res.images.length === 0 ? null : res.images[0].url,\r\n          title: res.type,\r\n          followers: res.followers.total,\r\n        })\r\n      );\r\n    });\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <NavLink\r\n        to={{ pathname: \"profile\", hash: window.location.hash }}\r\n        style={({ isActive }) =>\r\n          isActive ? { color: \"transparent\" } : { color: \"transparent\" }\r\n        }\r\n      >\r\n        <Stack\r\n          direction=\"row\"\r\n          spacing={2}\r\n          sx={{ ml: \"3rem\" }}\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Avatar alt={UserName} src={Userimg} />\r\n          <Typography\r\n            sx={{\r\n              fontSize: 15,\r\n              fontWeight: \"200\",\r\n              color: \"#fff\",\r\n              letterSpacing: \"1px\",\r\n            }}\r\n          >\r\n            {UserName}\r\n          </Typography>\r\n        </Stack>\r\n      </NavLink>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import SearchBox from \"./Search/SearchBox\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Notification from \"./Notif\";\r\nimport ProfileInfo from \"./Profile/ProfileInfo\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <Grid\r\n        item\r\n        xs\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        sx={{\r\n          mt: 3,\r\n        }}\r\n      >\r\n        <Grid item xs={9} sm={9}>\r\n          <SearchBox />\r\n        </Grid>\r\n        <Grid item xs={6} sm={2}>\r\n          <Notification />\r\n        </Grid>\r\n        <Grid item xs={6} sm={1}>\r\n          <ProfileInfo />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import ReactJkMusicPlayer from \"react-jinke-music-player\";\r\nimport \"react-jinke-music-player/assets/index.css\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst options = {\r\n  defaultPlayIndex: 1,\r\n\r\n  theme: \"dark\",\r\n\r\n  bounds: \"body\",\r\n\r\n  quietUpdate: false,\r\n\r\n  clearPriorAudioLists: true,\r\n\r\n  autoPlayInitLoadPlayList: false,\r\n\r\n  preload: true,\r\n\r\n  glassBg: false,\r\n\r\n  remember: false,\r\n\r\n  remove: true,\r\n\r\n  defaultPosition: {\r\n    right: 100,\r\n    bottom: 120,\r\n  },\r\n\r\n  defaultPlayMode: \"order\",\r\n\r\n  mode: \"full\",\r\n\r\n  once: false,\r\n\r\n  autoPlay: true,\r\n\r\n  toggleMode: true,\r\n\r\n  showMiniModeCover: true,\r\n\r\n  showMiniProcessBar: false,\r\n\r\n  drag: true,\r\n\r\n  seeked: true,\r\n\r\n  showMediaSession: true,\r\n\r\n  showProgressLoadBar: true,\r\n\r\n  showPlay: true,\r\n\r\n  showReload: true,\r\n\r\n  showDownload: true,\r\n\r\n  showPlayMode: true,\r\n\r\n  showThemeSwitch: false,\r\n\r\n  showLyric: true,\r\n\r\n  showDestroy: false,\r\n\r\n  extendsContent: null,\r\n\r\n  defaultVolume: 1,\r\n\r\n  playModeShowTime: 600,\r\n\r\n  loadAudioErrorPlayNext: true,\r\n\r\n  autoHiddenCover: false,\r\n\r\n  spaceBar: true,\r\n\r\n  responsive: true,\r\n\r\n  mobileMediaQuery: \"(max-width: 1024px)\",\r\n\r\n  volumeFade: {\r\n    fadeIn: 1000,\r\n    fadeOut: 1000,\r\n  },\r\n\r\n  restartCurrentOnPrev: false,\r\n\r\n  // https://github.com/SortableJS/Sortable#options\r\n  sortableOptions: {},\r\n\r\n  // custom music player root node\r\n  getContainer() {\r\n    return document.body;\r\n  },\r\n\r\n  onBeforeDestroy(currentPlayId, audioLists, audioInfo) {\r\n    return new Promise((resolve, reject) => {\r\n      // your custom validate\r\n      // eslint-disable-next-line no-alert\r\n      if (window.confirm(\"Are you confirm destroy the player?\")) {\r\n        // if resolve, player destroyed\r\n        resolve();\r\n      } else {\r\n        // if reject, skip.\r\n        reject();\r\n      }\r\n    });\r\n  },\r\n};\r\n\r\nconst Footerplayer = () => {\r\n  const song = useSelector((state) => state.spotify.playSong);\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <ReactJkMusicPlayer {...options} audioLists={song} />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footerplayer;\r\n","import React from 'react';\r\nimport Footerplayer from './FooterPlayer';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <>\r\n            <Footerplayer/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Playbutton from \"../PlayerButton/PlayButton\";\r\nimport { useEffect } from \"react\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getNewRelease } from \"../../redux/SpotifySlice\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/swiper-bundle.min.css\";\r\nimport \"swiper/swiper.min.css\";\r\nimport { getTokenFromResponse } from \"../../config/config-spotify\";\r\n\r\nconst LatsetRelease = () => {\r\n  const newRelease = useSelector((state) => state.spotify.newRelease);\r\n  const dispatch = useDispatch();\r\n  const spotifyApi = new SpotifyWebApi();\r\n  useEffect(() => {\r\n    spotifyApi.setAccessToken(getTokenFromResponse().access_token);\r\n    //Get public albums\r\n    spotifyApi.getNewReleases({ limit: 20 }).then((res) => {\r\n      const songs = res.albums.items;\r\n      const newTrack = songs.map((song) => {\r\n        return {\r\n          cover: song.images[1].url,\r\n          id: song.id,\r\n          name: song.name,\r\n        };\r\n      });\r\n      dispatch(getNewRelease(newTrack));\r\n    });\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <Swiper\r\n        slidesPerView={13}\r\n        spaceBetween={296}\r\n        centeredSlides={false}\r\n        pagination={{\r\n          clickable: true,\r\n        }}\r\n      >\r\n        {newRelease.map((item) => (\r\n          <SwiperSlide className=\"mySwiper1\" key={item.id}>\r\n            <Box\r\n              sx={{\r\n                flexGrow: 1,\r\n                backgroundSize: \"cover\",\r\n                display: \"flex\",\r\n                width: 177,\r\n                backgroundImage: `url(${item.cover})`,\r\n                margin: \"2rem 0rem\",\r\n                transition: \"all 0.3s ease-in-out\",\r\n                height: 193,\r\n                backgroundColor: \"#1b1a20\",\r\n                borderRadius: \"10px\",\r\n                \"&:hover\": {\r\n                  transition: \"all 0.3s ease-in-out\",\r\n                  boxShadow: \"3px 2px 12px 1px #2c2c2c\",\r\n                  backgroundColor: \"#1b1a20f2\",\r\n                  opacity: [0.9, 0.8, 0.7],\r\n                },\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  width: \"176px\",\r\n                  zIndex: 0,\r\n                  height: \"60px\",\r\n                  top: \"165px\",\r\n                  left: \"0rem\",\r\n                  overflow: \"hidden\",\r\n                  cursor: \"move\",\r\n                  borderBottomLeftRadius: \"10px\",\r\n                  borderBottomRightRadius: \"10px\",\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    top: \" -95px\",\r\n                    left: \"-4px\",\r\n                    backgroundImage: `url(${item.cover})`,\r\n                    bottom: \"-8rem\",\r\n                    right: \"-10px\",\r\n                    backgroundPosition: \"4px -226px\",\r\n                    backgroundSize: \"193px 188px\",\r\n                    filter: \" blur(16px)\",\r\n                  }}\r\n                ></Box>\r\n              </Box>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"flex-start\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item xs={8}>\r\n                  <Box\r\n                    sx={{ position: \"absolute\", top: \"136px\", left: \"123px\" }}\r\n                  >\r\n                    <Playbutton\r\n                    //   onClickHandler={() => {\r\n                    //     song.track.map((i) => dispatch(playSong(i)));\r\n                    //   }}\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Box>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: 13,\r\n                        width: \"127%\",\r\n                        zIndex: 2,\r\n                        fontWeight: \"700\",\r\n                        color: \"#fff\",\r\n                        textAlign: \"center\",\r\n                        position: \"absolute\",\r\n                        top: 183,\r\n                        left: 11,\r\n                        lineHeight: \"15px\",\r\n                      }}\r\n                    >\r\n                      {item.name}\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LatsetRelease;\r\n","import Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { styled } from '@mui/material/styles';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport AvatarGroup from '@mui/material/AvatarGroup';\r\nimport Stack from '@mui/material/Stack';\r\nimport Playbutton from '../PlayerButton/PlayButton';\r\nimport { useEffect } from 'react';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getUserTopTrack, playSong } from '../../redux/SpotifySlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { getTokenFromResponse } from '../../config/config-spotify';\r\n\r\nconst Img = styled('img')({\r\n  margin: '17px 16px',\r\n  display: 'flex',\r\n  width: 107,\r\n  height: 107,\r\n  borderRadius: '6px',\r\n});\r\n\r\nconst Publicplaylist = ({ Albums }) => {\r\n  const dispatch = useDispatch();\r\n  const topTrack = useSelector((state) => state.spotify.getUserTopTrack);\r\n  const spotifyApi = new SpotifyWebApi();\r\n  useEffect(() => {\r\n    spotifyApi.setAccessToken(getTokenFromResponse().access_token);\r\n    //Get public albums\r\n    spotifyApi\r\n      .getAlbums(Albums)\r\n      .then((data) => {\r\n        const Fill = data.albums.map((item) => {\r\n          return {\r\n            cover: item.images[0].url,\r\n            id: item.id,\r\n            name: item.name,\r\n            track: item.tracks.items.map((url) => {\r\n              return {\r\n                cover: item.images[0].url,\r\n                name: url.name,\r\n                album: item.name,\r\n                id: url.id,\r\n                singer: url.artists[0].name,\r\n                musicSrc: url.preview_url,\r\n              };\r\n            }),\r\n          };\r\n        });\r\n        dispatch(getUserTopTrack(Fill));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Stack\r\n        direction='row'\r\n        justifyContent='flex-start'\r\n        alignItems='center'\r\n        spacing={5}\r\n        sx={{\r\n          ml: { lg: 0, md: '8rem', sm: '0' },\r\n          mt: { lg: 0, md: '1rem', sm: '1rem' },\r\n        }}\r\n      >\r\n        {topTrack.map((song) => (\r\n          <Box\r\n            key={song.id}\r\n            sx={{\r\n              flexGrow: 1,\r\n              maxWidth: { lg: 350, md: 154, sm: 154 },\r\n              margin: '2rem 0rem',\r\n              transition: 'all 0.3s ease-in-out',\r\n              height: { lg: 140, md: 203, sm: 203 },\r\n              backgroundColor: '#1b1a20',\r\n              borderRadius: '6px',\r\n              '&:hover': {\r\n                transition: 'all 0.3s ease-in-out',\r\n                boxShadow: '3px 2px 12px 1px #2c2c2c',\r\n                backgroundColor: '#1b1a20f2',\r\n                opacity: [0.9, 0.8, 0.7],\r\n              },\r\n            }}\r\n          >\r\n            <Grid\r\n              container\r\n              direction={{ lg: 'row', md: 'column', sm: 'column' }}\r\n              justifyContent='flex-start'\r\n              alignItems='center'\r\n            >\r\n              <Grid item xs={8}>\r\n                <Img alt={song.name} src={song.cover} />\r\n                <Box sx={{ position: 'relative', top: '-88px', left: '3rem' }}>\r\n                  <Playbutton\r\n                    onClickHandler={() => {\r\n                      song.track.map((i) => dispatch(playSong(i)));\r\n                    }}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Box>\r\n                  <AvatarGroup\r\n                    max={4}\r\n                    sx={{\r\n                      position: 'relative',\r\n                      left: '-8rem',\r\n                      top: '-2rem',\r\n                      display: { lg: 'block', md: 'none', sm: 'none' },\r\n                    }}\r\n                  >\r\n                    <Avatar alt='Remy Sharp' src={song.cover} />\r\n                    <Avatar\r\n                      alt='Travis Howard'\r\n                      src='https://mui.com/static/images/avatar/2.jpg'\r\n                    />\r\n                    <Avatar\r\n                      alt='Cindy Baker'\r\n                      src='https://mui.com/static/images/avatar/3.jpg'\r\n                    />\r\n                    <Avatar\r\n                      alt='Agnes Walker'\r\n                      src='https://mui.com/static/images/avatar/4.jpg'\r\n                    />\r\n                    <Avatar\r\n                      alt='Trevor Henderson'\r\n                      src='https://mui.com/static/images/avatar/5.jpg'\r\n                    />\r\n                  </AvatarGroup>\r\n                  <Typography\r\n                    sx={{\r\n                      fontSize: 18,\r\n                      fontWeight: '300',\r\n                      color: '#ddd',\r\n                      margin: {\r\n                        lg: '-101px -92px',\r\n                        md: '-3rem 0',\r\n                        sm: '-3rem 0',\r\n                      },\r\n                      textAlign: { lg: 'unset', md: 'center', sm: 'center' },\r\n                    }}\r\n                  >\r\n                    {song.name}\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        ))}\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Publicplaylist;\r\n","import Box from '@mui/material/Box';\r\nconst Topbanner = () => {\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          width: { lg: 1123, md: 760, sm: 538 },\r\n          height: { lg: '40vh', md: '18vh', sm: '17vh' },\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center',\r\n          borderRadius: '20px',\r\n          mt: 4,\r\n          transition: 'all 0.3s ease-in-out',\r\n\r\n          backgroundImage:\r\n            'url(https://fiverr-res.cloudinary.com/images/q_auto,f_auto/gigs/165899486/original/4d086ab0c297311d6684fa0f8f21fc43c991945d/design-a-music-cover-artwork-album-cover-design.jpg)',\r\n          '&:hover': {\r\n            transition: 'all 0.3s ease-in-out',\r\n            backgroundColor: 'primary.main',\r\n            opacity: [0.9, 0.8, 0.7],\r\n          },\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Topbanner;\r\n","import { Typography } from '@mui/material';\r\nimport Grid from '@mui/material/Grid';\r\nimport LatsetRelease from '../../../components/main/LatestRelease';\r\nimport Publicplaylist from '../../../components/main/PublicPlaylist';\r\nimport Topbanner from '../../../components/main/TopBanner';\r\n\r\nconst Homepage = () => {\r\n  return (\r\n    <>\r\n      <Grid\r\n        sx={{ pl: 6 }}\r\n        container\r\n        direction='column'\r\n        justifyContent='space-evenly'\r\n        alignItems='right'\r\n        spacing={3}\r\n      >\r\n        <Grid item xs={8}>\r\n          <Topbanner />\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <Typography\r\n            sx={{\r\n              lineHeight: '1px',\r\n              mt: 3,\r\n              fontSize: '27px',\r\n              color: '#fff',\r\n              fontWeight: ' 700',\r\n            }}\r\n          >\r\n            Top Playlist\r\n          </Typography>\r\n          <Publicplaylist\r\n            Albums={[\r\n              '5ISVQShioiGcxJVrfQMlzK',\r\n              '1CIUfTEm0xPgHDUNc6G7rW',\r\n              '5ZNIZY6Dg9sC04xsJEBx0o',\r\n            ]}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <Typography\r\n            sx={{\r\n              fontSize: '27px',\r\n              color: '#fff',\r\n              fontWeight: ' 700',\r\n            }}\r\n          >\r\n            Latest Releases\r\n          </Typography>\r\n          <LatsetRelease />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { showAllCategory } from '../../redux/SpotifySlice';\r\nimport { getTokenFromResponse } from '../../config/config-spotify';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\n\r\nconst CategoryCover = () => {\r\n  const dispatch = useDispatch();\r\n  const allCategory = useSelector((state) => state.spotify.allCategory);\r\n  const spotifyApi = new SpotifyWebApi();\r\n  useEffect(() => {\r\n    spotifyApi.setAccessToken(getTokenFromResponse().access_token);\r\n    // Get all gener\r\n    spotifyApi.getCategories().then((res) => {\r\n      console.log(res);\r\n      dispatch(showAllCategory(res.categories.items));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ width: '97%', p: '1px 9px' }}>\r\n      <Typography\r\n        sx={{\r\n          fontSize: '27px',\r\n          color: '#fff',\r\n          fontWeight: ' 700',\r\n          p: '2rem 0',\r\n        }}\r\n      >\r\n        Browse All\r\n      </Typography>\r\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n        {console.log(allCategory)}\r\n        {allCategory.map((item) => (\r\n          <Grid key={item.id} item xs={3} md={6} sm={6} sx={{ mb: 3 }}>\r\n            <Typography sx={{ p: '13px 1px', fontSize: 18, color: '#ddd' }}>\r\n              {item.name}\r\n            </Typography>\r\n            <Box\r\n              sx={{\r\n                overflow: 'hidden',\r\n              }}\r\n            >\r\n              <a\r\n                href={`https://open.spotify.com/genre/${item.id}-page`}\r\n                target='_blank'\r\n                rel='noreferrer'\r\n              >\r\n                <img\r\n                  className='category-cover'\r\n                  src={item.icons[0].url}\r\n                  alt={item.id}\r\n                />\r\n              </a>\r\n            </Box>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CategoryCover;\r\n","import CategoryCover from '../../main/CategoryCover';\r\nimport Publicplaylist from '../../main/PublicPlaylist';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst Discover = () => {\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          ml: { lg: 0, md: 13, sm: 8 },\r\n        }}\r\n      >\r\n        <CategoryCover />\r\n      </Box>\r\n      <Box sx={{ ml: { md: 3, sm: 6 } }}>\r\n        <Typography\r\n          sx={{\r\n            lineHeight: '1px',\r\n            mt: 3,\r\n            fontSize: '27px',\r\n            color: '#fff',\r\n            fontWeight: ' 700',\r\n            ml: { lg: 0, md: 11, sm: 3 },\r\n          }}\r\n        >\r\n          Music for you\r\n        </Typography>\r\n        <Publicplaylist\r\n          Albums={[\r\n            '390TAPtzWKZJAEIzC6rqj3',\r\n            '42VOfNnu9exERLxxRwolYA',\r\n            '2Ezca5c6vcHwhpthlzsOXS',\r\n          ]}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Discover;\r\n","import Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport { BiBroadcast } from 'react-icons/bi';\r\nimport LatsetRelease from '../../main/LatestRelease';\r\n\r\nconst Podcast = () => {\r\n  return (\r\n    <>\r\n      <Box sx={{ textAlign: 'center', mt: 9 }}>\r\n        <Box sx={{ fontSize: 65, color: '#F3F3F3' }}>\r\n          <BiBroadcast />\r\n        </Box>\r\n        <Typography sx={{ fontSize: 31, fontWeight: 800, color: '#F3F3F3' }}>\r\n          Follow your first podcast\r\n        </Typography>\r\n        <Typography sx={{ fontSize: 19, fontWeight: 200, color: '#F3F3F3' }}>\r\n          Follow podcasts you like by tapping the follow button.\r\n        </Typography>\r\n        <Button\r\n          href='https://open.spotify.com/genre/podcasts-web'\r\n          target='_blank'\r\n          sx={{\r\n            fontSize: 16,\r\n            mt: 3,\r\n            bgcolor: '#25BF68',\r\n            p: '8px 29px',\r\n            borderRadius: '5px',\r\n            color: '#F3F3F3',\r\n          }}\r\n        >\r\n          FIND PODCAST\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Podcast;\r\n","import { Routes, Route } from 'react-router-dom';\r\nimport Auth from './components/auth/Auth';\r\nimport GlobalStyles from './style/Global-Style';\r\nimport { getTokenFromResponse } from './config/config-spotify';\r\nimport Grid from '@mui/material/Grid';\r\nimport SideBar from './components/Header/menu/SideBar';\r\nimport Profile from './components/Header/Profile/Profile';\r\nimport { Box } from '@mui/system';\r\nimport Header from './components/Header/Header';\r\nimport Footer from './components/footer/Footer';\r\nimport Homepage from './components/page/home/HomePage';\r\nimport Discover from './components/page/discover/Discover';\r\nimport { useSelector } from 'react-redux';\r\nimport Toptrack from './components/main/TopTrack';\r\nimport Podcast from './components/page/podcast/Podcast';\r\n\r\nfunction App() {\r\n  const searchResult = useSelector((state) => state.spotify.searchResult);\r\n  return (\r\n    <div className='App'>\r\n      <GlobalStyles />\r\n      {getTokenFromResponse().access_token ? (\r\n        <Grid container>\r\n          <Grid item xs={2} sx={{ ml: 4 }}>\r\n            <SideBar />\r\n          </Grid>\r\n          <Grid item xs={8} container direction='column'>\r\n            <Header />\r\n\r\n            <Grid\r\n              item\r\n              xs\r\n              container\r\n              direction='row'\r\n              alignItems='center'\r\n              sx={{\r\n                mt: 3,\r\n              }}\r\n            >\r\n              <Grid item sx={{ width: '100%' }}>\r\n                <Box\r\n                  sx={{\r\n                    width: { lg: '121%', md: '120%', sm: '118%' },\r\n                    overflowY: 'scroll',\r\n                    overflowX: 'clip',\r\n                    height: '79vh',\r\n                  }}\r\n                >\r\n                  {searchResult.length === 0 ? null : (\r\n                    <Grid sx={{ mr: '171px' }}>\r\n                      <Toptrack Title='Search Result' Track={searchResult} />\r\n                    </Grid>\r\n                  )}\r\n                  <Routes>\r\n                    <Route path='/profile' element={<Profile />} />\r\n                    <Route path='/home' element={<Homepage />} />\r\n                    <Route path='/discover' element={<Discover />} />\r\n                    <Route path='/podcast' element={<Podcast />} />\r\n                  </Routes>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n            <Footer />\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Routes>\r\n          <Route path='/' element={<Auth />} />\r\n        </Routes>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport SpotifySlice from '../redux/SpotifySlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    spotify: SpotifySlice,\r\n  },\r\n});","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { store } from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}